@using IndustriaComercio.Common.Helpers

@model IndustriaComercio.Models.Model.DeclaracionPreviaModel

<div class="card"
     v-show="vista === 2">
    <div class="card-header">
        DATOS DEL CONTRIBUYENTE
    </div>
    <div class="card-body">
        <!-- Nombre Completo -->
        <div class="form-group row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.NombreCompleto, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.NombreCompleto, 
                new { htmlAttributes = new Dictionary<string, object>
                    () {
                    { "class", "form-control" },
                    { "placeholder", "Requerido" },
                    { "data-toggle", "popover" },
                    { "data-trigger", "focus" },
                    { "data-content", @Html.DescriptionFor(model => model.NombreCompleto) },
                    { "data-placement", "top" } }
                    })
                @Html.ValidationMessageFor(model => model.NombreCompleto, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Documento -->
        <div class="form-group row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.TipoDocumentoId, htmlAttributes: new { @class = "control-label" })
            </div>
            <!-- Tipo Documento -->
            <div class="col-md-2">
                @Html.DropDownListFor(Model => Model.TipoDocumentoId, Model.TipoDocumentos, "Seleccionar", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoDocumentoId, "", new { @class = "text-danger" })
            </div>
            <!-- Identificación -->
            <div class="col-md-4">
                @Html.EditorFor(model => model.NoIdentificacion,
                new
                {
                    htmlAttributes = new Dictionary<string, object>
                    () {
                    { "class", "form-control" },
                    { "placeholder", "Requerido" },
                    { "data-toggle", "popover" },
                    { "data-trigger", "focus" },
                    { "data-content", @Html.DescriptionFor(model => model.NoIdentificacion) },
                    { "data-placement", "top" } }
                })
                @Html.ValidationMessageFor(model => model.NoIdentificacion, "", new { @class = "text-danger" })
            </div>
            <!-- Dígito Chequeo (debiera ser calculado) -->
            <div class="col-md-2">
                @Html.EditorFor(model => model.DigitoChequeo,
                new
                {
                    htmlAttributes = new Dictionary<string, object>
                    () {
                    { "class", "form-control" },
                    { "placeholder", "Requerido" },
                    { "data-toggle", "popover" },
                    { "data-trigger", "focus" },
                    { "data-content", @Html.DescriptionFor(model => model.DigitoChequeo) },
                    { "data-placement", "top" } }
                })
                @Html.ValidationMessageFor(model => model.DigitoChequeo, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Dirección completa de residencia -->
        <div class="form-group row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Direccion,
                new
                {
                    htmlAttributes = new Dictionary<string, object>
                    () {
                    { "class", "form-control" },
                    { "placeholder", "Requerido" },
                    { "data-toggle", "popover" },
                    { "data-trigger", "focus" },
                    { "data-content", @Html.DescriptionFor(model => model.Direccion) },
                    { "data-placement", "top" } }
                })
                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Municipio de residencia (Deberia ser Piedecuesta) -->
        <div class="form-group row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.MunicipioNotificacion, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.MunicipioNotificacion,
                new
                {
                    htmlAttributes = new Dictionary<string, object>
                    () {
                    { "class", "form-control" },
                    { "placeholder", "Requerido" },
                    { "data-toggle", "popover" },
                    { "data-trigger", "focus" },
                    { "data-content", @Html.DescriptionFor(model => model.MunicipioNotificacion) },
                    { "data-placement", "top" } }
                })
                @Html.ValidationMessageFor(model => model.MunicipioNotificacion, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Deaprtamento de residencia (debería ser Santander) -->
        <div class="form-group row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.DepartamentoNotificacion, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.DepartamentoNotificacion,
                new
                {
                    htmlAttributes = new Dictionary<string, object>
                    () {
                    { "class", "form-control" },
                    { "placeholder", "Requerido" },
                    { "data-toggle", "popover" },
                    { "data-trigger", "focus" },
                    { "data-content", @Html.DescriptionFor(model => model.DepartamentoNotificacion) },
                    { "data-placement", "top" } }
                })
                @Html.ValidationMessageFor(model => model.DepartamentoNotificacion, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Teléfono -->
        <div class="form-group row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Telefono,
                new
                {
                    htmlAttributes = new Dictionary<string, object>
                    () {
                    { "class", "form-control" },
                    { "placeholder", "Requerido" },
                    { "data-toggle", "popover" },
                    { "data-trigger", "focus" },
                    { "data-content", @Html.DescriptionFor(model => model.Telefono) },
                    { "data-placement", "top" } }
                })
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Correo Electrónico -->
        <div class="form-group row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Correo,
                new
                {
                    htmlAttributes = new Dictionary<string, object>
                    () {
                    { "class", "form-control" },
                    { "placeholder", "Requerido" },
                    { "data-toggle", "popover" },
                    { "data-trigger", "focus" },
                    { "data-content", @Html.DescriptionFor(model => model.Correo) },
                    { "data-placement", "top" } }
                })
                @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Numero Establecimientos -->
        <div class="form-group row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.NumeroEstablecimientos, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.NumeroEstablecimientos,
                new
                {
                    htmlAttributes = new Dictionary<string, object>
                    () {
                    { "class", "form-control" },
                    { "placeholder", "Requerido" },
                    { "data-toggle", "popover" },
                    { "data-trigger", "focus" },
                    { "data-content", @Html.DescriptionFor(model => model.NumeroEstablecimientos) },
                    { "data-placement", "top" } }
                })
                @Html.ValidationMessageFor(model => model.NumeroEstablecimientos, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Clasificación Contribuyente -->
        <div class="form-group row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.ClasificacionContribuyenteId, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-8">

                <select class="form-control"
                        name="ClasificacionContribuyenteId"
                        v-model="form.ClasificacionContribuyenteId">
                    <option value="0"
                            v-bind:selected="form.ClasificacionContribuyenteId == 0">
                        -- Seleccione --
                    </option>
                    <option v-for="item in listaClasificacionesContribuyentes"
                            v-bind:selected="form.ClasificacionContribuyenteId == item.Key"
                            v-bind:value="item.Key">
                        {{ item.Value }}
                    </option>
                </select>
                @Html.ValidationMessageFor(model => model.ClasificacionContribuyenteId, "", new { @class = "text-danger" })

                @*@Html.EditorFor(model => model.ClasificacionContribuyenteId,
                new
                {
                    htmlAttributes = new Dictionary<string, object>
                    () {
                    { "class", "form-control" },
                    { "placeholder", "Requerido" },
                    { "data-toggle", "popover" },
                    { "data-trigger", "focus" },
                    { "data-content", @Html.DescriptionFor(model => model.ClasificacionContribuyenteId) },
                    { "data-placement", "top" } }
                })*@
            </div>
        </div>
    </div>
</div>
